// <auto-generated />
using System;
using Insttantt.DataAccess.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Insttantt.DataAccess.Migrations
{
    [DbContext(typeof(InsttanttDbContext))]
    partial class InsttanttDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Insttantt.Domain.Entities.Field", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedOn")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Field", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Code = "F-0001",
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 957, DateTimeKind.Local).AddTicks(3266),
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 957, DateTimeKind.Local).AddTicks(3274),
                            Name = "Valor X"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Code = "F-0002",
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 957, DateTimeKind.Local).AddTicks(3307),
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 957, DateTimeKind.Local).AddTicks(3307),
                            Name = "Valor Y"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Code = "F-0003",
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 957, DateTimeKind.Local).AddTicks(3309),
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 957, DateTimeKind.Local).AddTicks(3310),
                            Name = "Resultado Suma"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Code = "F-0004",
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 957, DateTimeKind.Local).AddTicks(3311),
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 957, DateTimeKind.Local).AddTicks(3312),
                            Name = "Resultado Resta"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            Code = "F-0005",
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 957, DateTimeKind.Local).AddTicks(3313),
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 957, DateTimeKind.Local).AddTicks(3314),
                            Name = "Resultado Multiplicación"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            Code = "F-0006",
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 957, DateTimeKind.Local).AddTicks(3315),
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 957, DateTimeKind.Local).AddTicks(3316),
                            Name = "Resultado División"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            Code = "F-0007",
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 957, DateTimeKind.Local).AddTicks(3317),
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 957, DateTimeKind.Local).AddTicks(3318),
                            Name = "Resultado Compuesta"
                        });
                });

            modelBuilder.Entity("Insttantt.Domain.Entities.FieldOptionValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedOn")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<int>("IdField")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdField");

                    b.ToTable("FieldOptionValue", (string)null);
                });

            modelBuilder.Entity("Insttantt.Domain.Entities.Flow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedOn")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Flow", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 957, DateTimeKind.Local).AddTicks(7266),
                            Description = "Flujo con operaciones matematicas que dependen de la primera entrada de variables",
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 957, DateTimeKind.Local).AddTicks(7269),
                            Name = "Flujo de Prueba"
                        });
                });

            modelBuilder.Entity("Insttantt.Domain.Entities.FlowExecution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedOn")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<int>("IdFlow")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("IdFlow");

                    b.ToTable("FlowExecution", (string)null);
                });

            modelBuilder.Entity("Insttantt.Domain.Entities.FlowExecutionField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedOn")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<int>("IdFlowExecution")
                        .HasColumnType("int");

                    b.Property<int>("IdFlowStepField")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("IdFlowExecution");

                    b.HasIndex("IdFlowStepField");

                    b.ToTable("FlowExecutionField", (string)null);
                });

            modelBuilder.Entity("Insttantt.Domain.Entities.FlowStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedOn")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<int>("IdFlow")
                        .HasColumnType("int");

                    b.Property<int>("IdStep")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("IdFlow");

                    b.HasIndex("IdStep");

                    b.ToTable("FlowStep", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 958, DateTimeKind.Local).AddTicks(9037),
                            IdFlow = 1,
                            IdStep = 1,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 958, DateTimeKind.Local).AddTicks(9041)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 958, DateTimeKind.Local).AddTicks(9043),
                            IdFlow = 1,
                            IdStep = 2,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 958, DateTimeKind.Local).AddTicks(9043)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 958, DateTimeKind.Local).AddTicks(9045),
                            IdFlow = 1,
                            IdStep = 3,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 958, DateTimeKind.Local).AddTicks(9045)
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 958, DateTimeKind.Local).AddTicks(9046),
                            IdFlow = 1,
                            IdStep = 4,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 958, DateTimeKind.Local).AddTicks(9047)
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 958, DateTimeKind.Local).AddTicks(9048),
                            IdFlow = 1,
                            IdStep = 5,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 958, DateTimeKind.Local).AddTicks(9049)
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 958, DateTimeKind.Local).AddTicks(9050),
                            IdFlow = 1,
                            IdStep = 6,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 958, DateTimeKind.Local).AddTicks(9051)
                        });
                });

            modelBuilder.Entity("Insttantt.Domain.Entities.FlowStepField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedOn")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<int>("IdField")
                        .HasColumnType("int");

                    b.Property<int>("IdFlowStep")
                        .HasColumnType("int");

                    b.Property<bool>("IsOutput")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("IdField");

                    b.HasIndex("IdFlowStep");

                    b.ToTable("FlowStepField", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4114),
                            IdField = 1,
                            IdFlowStep = 1,
                            IsOutput = false,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4120)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4122),
                            IdField = 2,
                            IdFlowStep = 1,
                            IsOutput = false,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4123)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4124),
                            IdField = 1,
                            IdFlowStep = 2,
                            IsOutput = false,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4125)
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4126),
                            IdField = 2,
                            IdFlowStep = 2,
                            IsOutput = false,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4127)
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4128),
                            IdField = 3,
                            IdFlowStep = 2,
                            IsOutput = true,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4129)
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4130),
                            IdField = 1,
                            IdFlowStep = 3,
                            IsOutput = false,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4131)
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4132),
                            IdField = 2,
                            IdFlowStep = 3,
                            IsOutput = false,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4133)
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4134),
                            IdField = 4,
                            IdFlowStep = 3,
                            IsOutput = true,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4135)
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4136),
                            IdField = 1,
                            IdFlowStep = 4,
                            IsOutput = false,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4137)
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4138),
                            IdField = 2,
                            IdFlowStep = 4,
                            IsOutput = false,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4139)
                        },
                        new
                        {
                            Id = 11,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4140),
                            IdField = 5,
                            IdFlowStep = 4,
                            IsOutput = true,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4141)
                        },
                        new
                        {
                            Id = 12,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4142),
                            IdField = 1,
                            IdFlowStep = 5,
                            IsOutput = false,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4143)
                        },
                        new
                        {
                            Id = 13,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4144),
                            IdField = 2,
                            IdFlowStep = 5,
                            IsOutput = false,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4144)
                        },
                        new
                        {
                            Id = 14,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4189),
                            IdField = 6,
                            IdFlowStep = 5,
                            IsOutput = true,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4190)
                        },
                        new
                        {
                            Id = 15,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4191),
                            IdField = 3,
                            IdFlowStep = 6,
                            IsOutput = false,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4192)
                        },
                        new
                        {
                            Id = 16,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4193),
                            IdField = 4,
                            IdFlowStep = 6,
                            IsOutput = false,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4194)
                        },
                        new
                        {
                            Id = 17,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4195),
                            IdField = 5,
                            IdFlowStep = 6,
                            IsOutput = false,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4196)
                        },
                        new
                        {
                            Id = 18,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4197),
                            IdField = 6,
                            IdFlowStep = 6,
                            IsOutput = false,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4198)
                        },
                        new
                        {
                            Id = 19,
                            Active = true,
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4199),
                            IdField = 7,
                            IdFlowStep = 6,
                            IsOutput = true,
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(4200)
                        });
                });

            modelBuilder.Entity("Insttantt.Domain.Entities.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedOn")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Step", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Code = "STP-0001",
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(5701),
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(5704),
                            Name = "Enviar Valores",
                            Url = "https://localhost:7285/api/Parameters/inputparameters"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Code = "STP-0002",
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(5705),
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(5706),
                            Name = "Sumar",
                            Url = "https://localhost:7285/api/Operation/adittion"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Code = "STP-0003",
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(5707),
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(5708),
                            Name = "Restar",
                            Url = "https://localhost:7285/api/Operation/subtraction"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Code = "STP-0004",
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(5709),
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(5710),
                            Name = "Multiplicar",
                            Url = "https://localhost:7285/api/Operation/multiplication"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            Code = "STP-0005",
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(5711),
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(5712),
                            Name = "Dividir",
                            Url = "https://localhost:7285/api/Operation/division"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            Code = "STP-0006",
                            CreatedBy = "unknow",
                            CreatedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(5713),
                            ModifiedBy = "unknow",
                            ModifiedOn = new DateTime(2023, 8, 14, 20, 12, 21, 959, DateTimeKind.Local).AddTicks(5714),
                            Name = "Operacion Compuesta",
                            Url = "https://localhost:7285/api/Operation/compound"
                        });
                });

            modelBuilder.Entity("Insttantt.Domain.Entities.FieldOptionValue", b =>
                {
                    b.HasOne("Insttantt.Domain.Entities.Field", "Field")
                        .WithMany("fieldOptionValues")
                        .HasForeignKey("IdField")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FieldOptionValue_Field");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("Insttantt.Domain.Entities.FlowExecution", b =>
                {
                    b.HasOne("Insttantt.Domain.Entities.Flow", "Flow")
                        .WithMany("Executions")
                        .HasForeignKey("IdFlow")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FlowExecution_Flow");

                    b.Navigation("Flow");
                });

            modelBuilder.Entity("Insttantt.Domain.Entities.FlowExecutionField", b =>
                {
                    b.HasOne("Insttantt.Domain.Entities.FlowExecution", "FlowExecution")
                        .WithMany("Fields")
                        .HasForeignKey("IdFlowExecution")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FlowExecutionField_FlowExecution");

                    b.HasOne("Insttantt.Domain.Entities.FlowStepField", "FlowStepField")
                        .WithMany("FlowExecutionFields")
                        .HasForeignKey("IdFlowStepField")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_FlowExecutionField_FlowStepField");

                    b.Navigation("FlowExecution");

                    b.Navigation("FlowStepField");
                });

            modelBuilder.Entity("Insttantt.Domain.Entities.FlowStep", b =>
                {
                    b.HasOne("Insttantt.Domain.Entities.Flow", "Flow")
                        .WithMany("Steps")
                        .HasForeignKey("IdFlow")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FlowStep_Flow");

                    b.HasOne("Insttantt.Domain.Entities.Step", "Step")
                        .WithMany("FlowSteps")
                        .HasForeignKey("IdStep")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FlowStep_Step");

                    b.Navigation("Flow");

                    b.Navigation("Step");
                });

            modelBuilder.Entity("Insttantt.Domain.Entities.FlowStepField", b =>
                {
                    b.HasOne("Insttantt.Domain.Entities.Field", "Field")
                        .WithMany("FlowStepFields")
                        .HasForeignKey("IdField")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FlowStepField_Field");

                    b.HasOne("Insttantt.Domain.Entities.FlowStep", "FlowStep")
                        .WithMany("Fields")
                        .HasForeignKey("IdFlowStep")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FlowStepField_FlowStep");

                    b.Navigation("Field");

                    b.Navigation("FlowStep");
                });

            modelBuilder.Entity("Insttantt.Domain.Entities.Field", b =>
                {
                    b.Navigation("FlowStepFields");

                    b.Navigation("fieldOptionValues");
                });

            modelBuilder.Entity("Insttantt.Domain.Entities.Flow", b =>
                {
                    b.Navigation("Executions");

                    b.Navigation("Steps");
                });

            modelBuilder.Entity("Insttantt.Domain.Entities.FlowExecution", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("Insttantt.Domain.Entities.FlowStep", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("Insttantt.Domain.Entities.FlowStepField", b =>
                {
                    b.Navigation("FlowExecutionFields");
                });

            modelBuilder.Entity("Insttantt.Domain.Entities.Step", b =>
                {
                    b.Navigation("FlowSteps");
                });
#pragma warning restore 612, 618
        }
    }
}
